name: .NET

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 5.0.x
    - name: Restore dependencies
      run: dotnet restore
      working-directory: ./Album-Api
      
    - name: Build
      run: dotnet build --no-restore
      working-directory: ./Album-Api
      
    - name: Test
      run: dotnet test --no-build --verbosity normal
      working-directory: ./Album-Api
      
    - name: Build the Docker image
      run: docker build . --file Dockerfile --tag album-api-image:$(date +%s)
      working-directory: ./Album-Api/Album.Api
      
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
        aws-region: us-east-1
      
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build and push image to Amazon ECR
      id: build-image
      working-directory: ./Album-Api/Album.Api
      env:
        IMAGE_TAG: ${{ github.run_number }}
      run: 
        |
        docker build -t 465480687456.dkr.ecr.us-east-1.amazonaws.com/cnsd/album:$IMAGE_TAG .
        docker push 465480687456.dkr.ecr.us-east-1.amazonaws.com/cnsd/album:$IMAGE_TAG
        ls -la
        
    - name: Fill in the new image ID in the Amazon ECS task definition
      id: task-def
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      with:
        task-definition: ./Album-Api/Album.Api/task-definition.json
        container-name: AlbumContainer
        image: 465480687456.dkr.ecr.us-east-1.amazonaws.com/cnsd/album:$IMAGE_TAG

    - name: Deploy Amazon ECS task definition
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        task-definition: task-definition.json
        service: AlbumServiceBlueGreen
        cluster: AlbumCluster
        wait-for-service-stability: true
